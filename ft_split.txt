static int word_count(char const *str, char c)
{
    int count;
    int i;

    if (!str)
        return (0);
    count = 0;
    i = 0;
    while (str[i])
    {
        while (str[i] && str[i] == c)
            i++;
        if (str[i])
        {
            count++;
            while (str[i] && str[i] != c)
                i++;
        }
    }
    return (count);
}

static size_t find_word_end(char const *s, char c, size_t start)
{
    while (s[start] && s[start] != c)
        start++;
    return (start);
}

char **ft_split(char const *s, char c)
{
    char    **array;
    int     i;
    size_t  start;
    size_t  end;

    if (!s)
        return (NULL);
    array = (char **)malloc(sizeof(char *) * (word_count(s, c) + 1));
    if (!array)
        return (NULL);
    i = 0;
    start = 0;
    while (s[start])
    {
        while (s[start] && s[start] == c)
            start++;
        if (!s[start])
            break;
        end = find_word_end(s, c, start);
        array[i] = ft_substr(s, start, end - start);
        if (!array[i])
            return (free_array(array, i));
        i++;
        start = end;
    }
    array[i] = NULL;
    return (array);
}
